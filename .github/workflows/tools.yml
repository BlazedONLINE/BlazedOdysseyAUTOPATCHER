name: Build Tools

on:
  push:
    branches: [ main ]
    paths:
      - 'tools/**'
      - '.github/workflows/tools.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'tools/**'
  workflow_dispatch:

jobs:
  build-tools:
    name: Build Tools
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            runtime: win-x64
            extension: .exe
          - os: ubuntu-latest
            runtime: linux-x64
            extension: ''
          - os: macos-latest
            runtime: osx-x64
            extension: ''
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0'

      - name: Build Manifest Generator
        run: |
          dotnet publish tools/ManifestGenerator/ManifestGenerator.csproj \
            --configuration Release \
            --runtime ${{ matrix.runtime }} \
            --self-contained \
            -p:PublishSingleFile=true \
            --output tools/bin/ManifestGenerator/${{ matrix.runtime }}

      - name: Build Publisher
        run: |
          dotnet publish tools/Publisher/Publisher.csproj \
            --configuration Release \
            --runtime ${{ matrix.runtime }} \
            --self-contained \
            -p:PublishSingleFile=true \
            --output tools/bin/Publisher/${{ matrix.runtime }}

      - name: Test tools
        run: |
          # Test manifest generator help
          tools/bin/ManifestGenerator/${{ matrix.runtime }}/ManifestGenerator${{ matrix.extension }} --help
          
          # Test publisher help
          tools/bin/Publisher/${{ matrix.runtime }}/Publisher${{ matrix.extension }} --help

      - name: Upload tools artifacts
        uses: actions/upload-artifact@v3
        with:
          name: tools-${{ matrix.runtime }}
          path: |
            tools/bin/ManifestGenerator/${{ matrix.runtime }}/ManifestGenerator${{ matrix.extension }}
            tools/bin/Publisher/${{ matrix.runtime }}/Publisher${{ matrix.extension }}
          retention-days: 7

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build-tools
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download tools
        uses: actions/download-artifact@v3
        with:
          name: tools-linux-x64
          path: tools/bin

      - name: Make tools executable
        run: |
          chmod +x tools/bin/ManifestGenerator
          chmod +x tools/bin/Publisher

      - name: Create test game directory
        run: |
          mkdir -p test-game
          echo "Test game content" > test-game/game.exe
          echo "Test data" > test-game/data.txt
          mkdir -p test-game/assets
          echo "Asset data" > test-game/assets/texture.png

      - name: Generate test manifest
        run: |
          ./tools/bin/ManifestGenerator generate \
            --input test-game \
            --output test-manifest.json \
            --version "1.0.0-test" \
            --base-url "https://example.com/releases" \
            --channel "test"

      - name: Verify manifest
        run: |
          ./tools/bin/ManifestGenerator verify \
            --manifest test-manifest.json \
            --game-dir test-game

      - name: Display manifest
        run: |
          echo "Generated manifest:"
          cat test-manifest.json

      - name: Upload test artifacts
        uses: actions/upload-artifact@v3
        with:
          name: integration-test-results
          path: |
            test-manifest.json
            test-game/
          retention-days: 3